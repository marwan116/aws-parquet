[tool.poetry]
name = "aws_parquet"
version = "0.4.0"
description = "An object-oriented interface for defining parquet datasets for AWS built on top of awswrangler and pandera"
packages = [{ include = "aws_parquet", from = "src" }]
authors = ["Marwan Sarieddine <sarieddine.marwan@gmail.com>"]
license = "MIT"

readme = "README.md"
include = ["README.md", "LICENSE.txt", "src/aws_parquet/py.typed"]
exclude = ["*.so", "*.pyc", "*~", "#*", ".git*", ".coverage*", "DS_Store", "__pycache__"]

homepage = "https://github.com/marwan116/aws-parquet/"
repository = "https://github.com/marwan116/aws-parquet/"
documentation = "https://aws-parquet.readthedocs.io/en/latest/"

keywords = ["pandas", "aws", "parquet"]

classifiers = [
    "Programming Language :: Python :: 3.8",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
]

[tool.poetry.dependencies]
python = ">=3.8, <=3.11"
awswrangler = "^3.1.1"
pandera = "^0.15.1"
pydantic = "^1.10.8"

[tool.poetry.group.dev.dependencies]
# type hints
mypy = "1.3.0"
# formatting
black = "23.3.0"
# linting
ruff = "0.0.269"
# import sorting
isort = "5.12.0"
# testing
pytest = "7.3.1"
pytest-sugar = "0.9.7"
# on-demand environments
nox = "2023.4.22"
nox-poetry = "1.0.2"
# checking markdown files
mktestdocs = "^0.2.1"


[tool.poetry.group.docs.dependencies]
sphinx = "^7.0.1"
furo = "^2023.5.20"

[tool.mypy]
strict = true
pretty = true
show_column_numbers = true
show_error_codes = true
show_error_context = true
warn_unreachable = true

[[tool.mypy.overrides]]
module = "tests.*"
warn_no_return = false
allow_untyped_defs = true
allow_untyped_decorators = true

[[tool.mypy.overrides]]
module = "pandas.*"
ignore_missing_imports = true

[[tool.mypy.overrides]]
module = "pyarrow.*"
ignore_missing_imports = true

[tool.isort]
profile = "black"
combine_as_imports = true
known_first_party = ["aws_parquet"]
order_by_type = false

[build-system]
requires = ["poetry-core>=1.0.0"]
build-backend = "poetry.core.masonry.api"